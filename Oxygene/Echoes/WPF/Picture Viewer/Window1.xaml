<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:pd="clr-namespace:PictureViewer"
	x:Class="PictureViewer.Window1"
    Title="Picture Viewer"
	WindowState="Normal"
	Loaded="WindowLoaded" Width="507.333" Height="470">

    <Window.Resources>
        <LinearGradientBrush x:Key="WindowGradient" StartPoint="0,1"
                                     EndPoint="0,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#ccffffff"
                                    Offset="0" />
                    <GradientStop Color="transparent"
                                    Offset="1" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ButtonDisabledGradient" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="#10302A90" Offset="0" />
                <GradientStop Color="#10201040" Offset="1" />
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <!-- STYLES -->

        <Style TargetType="{x:Type pd:Window1}">
            <Setter Property="Background" Value="{DynamicResource WindowGradient}" />
        </Style>

        <Style x:Key="TitleText" TargetType="{x:Type TextBlock}" >
            <Setter Property="FontFamily" Value="Segoe Black" />
            <Setter Property="FontSize" Value="20px" />
            <Setter Property="Foreground" Value="MidnightBlue" />
        </Style>

        <Style x:Key="ButtonStyler"
         TargetType="{x:Type Button}">
            <Setter Property="Background">
                <Setter.Value>
                    <RadialGradientBrush>
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="black"
                            Offset="0" />
                                <GradientStop Color="black"
                            Offset="1" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </RadialGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Height"
            Value="40" />
            <Setter Property="Foreground"
            Value="white" />
            <Setter Property="Grid.Row"
            Value="2" />
            <Setter Property="Grid.Column"
            Value="3" />
            <Setter Property="Content"
            Value="Base button style" />
            <Setter Property="Margin"
            Value="3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="GelBackground"
                       Opacity="1"
                       RadiusX="9"
                       RadiusY="9"
                       Fill="{TemplateBinding  Background}"
                       StrokeThickness="0.35">
                                <Rectangle.Stroke>
                                    <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="white"
                                    Offset="0" />
                                                <GradientStop Color="#666666"
                                    Offset="1" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>
                            </Rectangle>
                            <Rectangle x:Name="GelShine"
                       Margin="2,2,2,0"
                       VerticalAlignment="top"
                       RadiusX="6"
                       RadiusY="6"
                       Opacity="1"
                       Stroke="transparent"
                       Height="15px">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="#ccffffff"
                                    Offset="0" />
                                                <GradientStop Color="transparent"
                                    Offset="1" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter x:Name="GelButtonContent"
                              VerticalAlignment="center"
                              HorizontalAlignment="center"
                              Content="{TemplateBinding  Content}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                     Value="true">
                                <Setter Property="Rectangle.Fill"
                      TargetName="GelBackground">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="lime"
                                      Offset="0" />
                                                    <GradientStop Color="DarkGreen"
                                      Offset="1" />
                                                </GradientStopCollection>
                                            </GradientBrush.GradientStops>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed"
                     Value="true">
                                <Setter Property="Rectangle.Fill"
                      TargetName="GelBackground">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="#ffcc00"
                                      Offset="0" />
                                                    <GradientStop Color="#cc9900"
                                      Offset="1" />
                                                </GradientStopCollection>
                                            </GradientBrush.GradientStops>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="{DynamicResource ButtonDisabledGradient}"  />
                                <Setter Property="BorderBrush" Value="Silver"  />
                                <Setter Property="Foreground" Value="SlateGray"  />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" 
               Value="true">
                    <Setter Property="Foreground"
                Value="black " />
                </Trigger>
                <Trigger Property="IsPressed"
               Value="true">
                    <Setter Property="Foreground"
                Value="black " />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MyButton"
         BasedOn="{StaticResource ButtonStyler}"
         TargetType="{x:Type Button}">
            <Style.Resources>
                <!-- Add some animation here -->
                <Storyboard x:Key="OnMouseEnter1">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1.15"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1.25"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="OnMouseLeave1">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                        <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0.85"/>
                        <SplineDoubleKeyFrame KeyTime="00:00:00.6000000" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                        <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0.85"/>
                        <SplineDoubleKeyFrame KeyTime="00:00:00.6000000" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </Style.Resources>
            <Setter Property="Grid.Row" Value="2" />
            <Setter Property="Grid.Column" Value="3" />
            <Setter Property="VerticalAlignment" Value="bottom" />
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                        <SkewTransform AngleX="0" AngleY="0"/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                    <BeginStoryboard x:Name="OnMouseEnter1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
                </EventTrigger>
                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                    <BeginStoryboard x:Name="OnMouseEnter1_BeginStoryboard1" Storyboard="{StaticResource OnMouseEnter1}"/>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="UserTile"
         TargetType="{x:Type Image}">
            
            <Setter Property="Width"
            Value="120px" />
            <Setter Property="Height"
            Value="120px" />
        </Style>

        <Style x:Key="UserTileText"
         TargetType="{x:Type TextBlock}">
            <Setter Property="DockPanel.Dock"
            Value="Top" />
            <Setter Property="HorizontalAlignment"
            Value="center" />
        </Style>

        <Style x:Key="CustomBackground"
         TargetType="{x:Type Control}">
            <Setter Property="Grid.ColumnSpan"
            Value="4" />
            <Setter Property="Grid.RowSpan"
            Value="3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <Grid>
                            <Rectangle>
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="white"
                                    Offset="0" />
                                                <GradientStop Color="#cc99ccff"
                                    Offset="1" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DATA TEMPLATE -->

        <DataTemplate DataType="{x:Type pd:ImageFile}">
            <Border VerticalAlignment="Center" HorizontalAlignment="Center" Padding="4" Margin="2" Background="White">
                <Image Source="{Binding Image}" />
            </Border>
        </DataTemplate>



        <!-- IMAGELIST TEMPLATE -->

        <Style x:Key="ImageListStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}" >
                        <Border 
							BorderBrush="Gray" 
							BorderThickness="1" 
							CornerRadius="6" 
							Background="{DynamicResource ListBoxGradient}" >
                            <ScrollViewer 
								VerticalScrollBarVisibility="Disabled" 
								HorizontalScrollBarVisibility="Auto">
                                <StackPanel  
									IsItemsHost="True" 
									Orientation="Horizontal" 
									HorizontalAlignment="Left" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- IMAGELIST STORYBOARDS -->

        <Style x:Key="ImageListItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="MaxHeight" Value="65" />
            <Setter Property="MinHeight" Value="65" />
            <Setter Property="Opacity" Value=".65" />
            <Style.Triggers>
                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation 
									Duration="0:0:0.2" 
									Storyboard.TargetProperty="MaxHeight" 
									To="95" />
                                <DoubleAnimation 
									Duration="0:0:0.2" 
									Storyboard.TargetProperty="Opacity"
									To="1.0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>

                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation 
									Duration="0:0:1" 
									Storyboard.TargetProperty="MaxHeight" />
                                <DoubleAnimation 
									Duration="0:0:0.2" 
									Storyboard.TargetProperty="Opacity" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>



        <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="OuterBorder"
							CornerRadius="3" 
							Background="{DynamicResource ButtonGradient}">
                            <Border
								x:Name="InnerBorder"
								CornerRadius="3"
								Background="{DynamicResource ButtonUpGradient}"
								Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="ContentSite" 
								HorizontalAlignment="Center" 
								VerticalAlignment="Center" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource ButtonDownGradient}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource ButtonDisabledGradient}"  />
                                <Setter Property="BorderBrush" Value="Silver"  />
                                <Setter Property="Foreground" Value="SlateGray"  />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Height" Value="18" />
            <Setter Property="Foreground" Value="MidnightBlue" />
        </Style>

        <!-- COMBOBOX STYLE -->

        <Style TargetType="{x:Type ComboBox}" >
            <Setter Property="Background" Value="{DynamicResource ComboBoxGradient}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Height" Value="18px" />
            <Setter Property="Foreground" Value="MidnightBlue" />
        </Style>


        <!-- SCROLLBAR TEMPLATES -->

        <Style x:Key="Scrollbar_LineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border 
							BorderBrush="Transparent" 
							BorderThickness="1" 
							CornerRadius="6" 
							Background="{DynamicResource ButtonGradient}">
                            <ContentPresenter x:Name="ContentSite" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="MinHeight" Value="12" />
            <Setter Property="MinWidth" Value="12" />
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="FontSize" Value="6pt" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontFamily" Value="Lucida Sans" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>

        <Style x:Key="ScrollBar_TrackRepeater"  TargetType="{x:Type RepeatButton}">
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Command" Value="ScrollBar.PageUpCommand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBar_UpTrack" BasedOn="{StaticResource ScrollBar_TrackRepeater}" TargetType="{x:Type RepeatButton}">
            <Setter Property="Command" Value="ScrollBar.PageUpCommand" />
        </Style>

        <Style x:Key="ScrollBar_DownTrack" BasedOn="{StaticResource ScrollBar_TrackRepeater}" TargetType="{x:Type RepeatButton}">
            <Setter Property="Command" Value="ScrollBar.PageDownCommand" />
        </Style>

        <Style x:Key="ScrollBar_LeftTrack" BasedOn="{StaticResource ScrollBar_TrackRepeater}" TargetType="{x:Type RepeatButton}">
            <Setter Property="Command" Value="ScrollBar.PageLeftCommand" />
        </Style>

        <Style x:Key="ScrollBar_RightTrack" BasedOn="{StaticResource ScrollBar_TrackRepeater}" TargetType="{x:Type RepeatButton}">
            <Setter Property="Command" Value="ScrollBar.PageRightCommand" />
        </Style>

        <Style x:Key="ScrollBar_VerticalThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="6" 
							BorderBrush="Transparent"     
							BorderThickness="1" 
							Background="{DynamicResource VerticalScrollGradient}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="MinHeight" Value="10" />
            <Setter Property="MinWidth" Value="10" />
        </Style>

        <Style x:Key="ScrollBar_HorizontalThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="6" 
							BorderBrush="Transparent"     
							BorderThickness="1" 
							Background="{DynamicResource ButtonGradient}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="MinHeight" Value="10" />
            <Setter Property="MinWidth" Value="10" />
        </Style>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="MinWidth" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="10" />
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="10" />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="1" BorderThickness="0" Background="Transparent" CornerRadius="4"/>
                            <RepeatButton Grid.Row="0" Style="{DynamicResource Scrollbar_LineButton}" Command="ScrollBar.LineUpCommand" Content=" ^" />
                            <Track Grid.Row="1" Name="PART_Track"  IsDirectionReversed="True">
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{DynamicResource ScrollBar_DownTrack}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{DynamicResource ScrollBar_UpTrack}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource ScrollBar_VerticalThumb}"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Grid.Row="2" Style="{DynamicResource Scrollbar_LineButton}" Command="ScrollBar.LineDownCommand" Content=" v" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal" >
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="MinHeight" Value="10" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="12"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="12" />
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="12" />
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.Column="1" BorderThickness="0" Background="Transparent" CornerRadius="4"/>
                                    <RepeatButton Grid.Column="0" Style="{DynamicResource Scrollbar_LineButton}" Command="ScrollBar.LineLeftCommand" Content=" &lt;" />
                                    <Track Grid.Column="1" Name="PART_Track">
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{DynamicResource ScrollBar_RightTrack}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{DynamicResource ScrollBar_LeftTrack}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{DynamicResource ScrollBar_HorizontalThumb}"/>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton Grid.Column="2" Style="{DynamicResource Scrollbar_LineButton}" Command="ScrollBar.LineRightCommand" Content=" &gt;" />

                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Viewbox VerticalAlignment="Top" Stretch="Uniform">

        <Grid Margin="20" Width="459.026" ShowGridLines="False" >
            <Grid.RowDefinitions>
                <RowDefinition Height="408.999999999999" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Opacity="1" FontFamily="Segoe" FontSize="38" FontStretch="Normal" FontWeight="Light" TextWrapping="Wrap" Foreground="#FFFFFFFF" Margin="8,-15.14,0,0" VerticalAlignment="Top" Height="38.511" xml:space="preserve"><Run Foreground="#FF9C9FA3">Picture</Run> <Run FontWeight="Normal">Viewer</Run> <Run FontSize="14" FontWeight="Normal" Foreground="#FF9C9FA3">photos by dwarfland.com</Run></TextBlock>

            <ListBox Style="{DynamicResource ImageListStyle}"
				Name ="ImageListBox"
				Margin="0,0,0,8"
				DataContext="{Binding Source={StaticResource Images}}"
				SelectionChanged ="ImageListSelection"
				ItemsSource="{Binding }"
				ItemContainerStyle="{DynamicResource ImageListItem}"
				SelectedIndex="0" VerticalAlignment="Bottom" Height="100" />

            <StackPanel
				Margin="-2,27.372,0,112" HorizontalAlignment="Left" Width="69.125">

                <Button
				Name="RotateButton"
				VerticalAlignment="Bottom"
				HorizontalAlignment="Center"
				Click="Rotate"
				Width="55"
				Margin="2" Style="{DynamicResource MyButton}" Content="Rotate"/>

                <Button
				Name="BWButton"
				VerticalAlignment="Bottom"
				HorizontalAlignment="Center"
				Click="BlackAndWhite"
				Width="55"
				Margin="2" Style="{DynamicResource MyButton}" Content="B&amp;W"/>

                <Button
				Name="CropButton"
				VerticalAlignment="Bottom"
				HorizontalAlignment="Center"
				Click="Crop"
				Width="55"
				Margin="2" Style="{DynamicResource MyButton}" Content="Crop"/>

                <Button
					x:Name="UndoButton"
					Click="Undo"
					IsEnabled="False"
					Width="55"
			Content="Undo" Style="{DynamicResource MyButton}"/>

            </StackPanel>

            <Image Name="CurrentImage"
				Margin="71.125,27.371,8,120"
				MouseDown="OnMouseDown" OpacityMask="{x:Null}" Stretch="Uniform" HorizontalAlignment="Stretch"/>

        </Grid>
    </Viewbox>
</Window>
